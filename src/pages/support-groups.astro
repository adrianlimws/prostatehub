---
import BaseLayout        from '../layouts/Layout.astro'; 
import Header            from '../components/astro/Header.astro';
import Footer            from '../components/astro/Footer.astro';
import supportGroupsData from '../data/support-groups-json.json';
import { Breadcrumbs }   from "astro-breadcrumbs";
import "astro-breadcrumbs/breadcrumbs.css";
export const prerender = false

const regionParam = Astro.url.searchParams.get('region') || supportGroupsData.regions[0].name;

const selectedRegionData = supportGroupsData.regions.find(r => 
  r.name.toLowerCase() === regionParam.toLowerCase()
) || supportGroupsData.regions[0];
---

<BaseLayout title="Prostate Hub - Support Groups">
  <Header />
  
  <main class="my-8 container mx-auto px-4">
    <section class="text-center p-8 mb-8">
      <h1 class="text-3xl font-bold mb-4">Support Groups Information</h1>
    </section>
    <div class="mb-2">
      <Breadcrumbs separatorAriaHidden={false} linkTextFormat="capitalized">
        <svg
          slot="separator"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </Breadcrumbs>
    </div>
    <div class="flex flex-col md:flex-row gap-6">
      <aside class="md:w-64">
        <div class="md:block hidden">
          <h2 class="font-bold mb-4">Region List</h2>
          <ul class="list-none space-y-2">
            {supportGroupsData.regions.map((region) => (
              <li>
                <a 
                  href={`/support-groups?region=${encodeURIComponent(region.name)}`} 
                  class={`block p-2 rounded hover:bg-green-100 hover:text-green-800 transition ${regionParam === region.name ? 'font-bold text-green-800 bg-green-100' : ''}`}
                > {region.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
        
        {/* Dropdown for mobile viewports */}
        <div class="md:hidden">
          <select 
            onchange="window.location.href = '/support-groups?region=' + this.value;"
            class="block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm"
          >
            {supportGroupsData.regions.map((region) => (
              <option value={region.name} selected={regionParam === region.name}>{region.name}</option>
            ))}
          </select>
        </div>
      </aside>
      <div class="flex-1">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {selectedRegionData.groups.map((group) => (
            <div class="border rounded-lg shadow-md p-6 h-full flex flex-col">
              <h3 class="font-semibold text-lg mb-3">{group.location}</h3>
              <div class="mb-4">
                <p class="font-medium text-gray-700">Contact Person</p>
                <p>{group.coordinator}</p>
              </div>
              <div class="mb-4">
                <p class="font-medium text-gray-700">Phone</p>
                <p>{group.phone}</p>
              </div>
              <div class="mb-4">
                <p class="font-medium text-gray-700">Email</p>
                <p><a href={`mailto:${group.email}`} class="text-blue-600 hover:underline break-words">{group.email}</a></p>
              </div>
              <p class="mt-auto">
                <a 
                  href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(group.location + ', New Zealand')}`} 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  class="text-blue-600 hover:underline"
                >
                  Google Map Link
                </a>
              </p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </main>
  
  <Footer />
</BaseLayout>